CCS PCM C Compiler, Version 5.078, 43599               25-Feb-19 17:21

               Filename:   E:\giao trinh\thuc tap microchip\projects\control RC servo vs HCSR04\control RC Servo vs HCSR04.lst

               ROM used:   690 words (8%)
                           Largest free fragment is 2048
               RAM used:   11 (3%) at main() level
                           25 (7%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  02
0001:  MOVWF  0A
0002:  GOTO   250
0003:  NOP
.................... #include <control RC Servo vs HCSR04.h> 
.................... #include <16F887.h> 
.................... //////////// Standard Header file for the PIC16F887 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F887 
*
0067:  MOVLW  8E
0068:  MOVWF  77
0069:  MOVF   27,W
006A:  MOVWF  78
006B:  MOVF   26,W
006C:  MOVWF  79
006D:  CLRF   7A
006E:  MOVF   78,F
006F:  BTFSS  03.2
0070:  GOTO   07B
0071:  MOVF   79,W
0072:  MOVWF  78
0073:  CLRF   79
0074:  MOVLW  08
0075:  SUBWF  77,F
0076:  MOVF   78,F
0077:  BTFSS  03.2
0078:  GOTO   07B
0079:  CLRF   77
007A:  GOTO   083
007B:  BCF    03.0
007C:  BTFSC  78.7
007D:  GOTO   082
007E:  RLF    79,F
007F:  RLF    78,F
0080:  DECF   77,F
0081:  GOTO   07B
0082:  BCF    78.7
*
008F:  MOVF   26,W
0090:  BTFSC  03.2
0091:  GOTO   0FF
0092:  MOVWF  2E
0093:  MOVF   2A,W
0094:  BTFSC  03.2
0095:  GOTO   0FF
0096:  ADDWF  2E,F
0097:  BTFSC  03.0
0098:  GOTO   0A0
0099:  MOVLW  7F
009A:  SUBWF  2E,F
009B:  BTFSS  03.0
009C:  GOTO   0FF
009D:  BTFSC  03.2
009E:  GOTO   0FF
009F:  GOTO   0A4
00A0:  MOVLW  81
00A1:  ADDWF  2E,F
00A2:  BTFSC  03.0
00A3:  GOTO   0FF
00A4:  MOVF   2E,W
00A5:  MOVWF  77
00A6:  CLRF   78
00A7:  CLRF   79
00A8:  CLRF   7A
00A9:  MOVF   27,W
00AA:  MOVWF  32
00AB:  BSF    32.7
00AC:  MOVF   28,W
00AD:  MOVWF  31
00AE:  MOVF   29,W
00AF:  MOVWF  30
00B0:  MOVLW  18
00B1:  MOVWF  2E
00B2:  CLRF   2F
00B3:  BTFSS  30.0
00B4:  GOTO   0CD
00B5:  MOVF   2D,W
00B6:  ADDWF  7A,F
00B7:  BTFSS  03.0
00B8:  GOTO   0BF
00B9:  INCF   79,F
00BA:  BTFSS  03.2
00BB:  GOTO   0BF
00BC:  INCF   78,F
00BD:  BTFSC  03.2
00BE:  BSF    2F.7
00BF:  MOVF   2C,W
00C0:  ADDWF  79,F
00C1:  BTFSS  03.0
00C2:  GOTO   0C6
00C3:  INCF   78,F
00C4:  BTFSC  03.2
00C5:  BSF    2F.7
00C6:  MOVF   2B,W
00C7:  MOVWF  28
00C8:  BSF    28.7
00C9:  MOVF   28,W
00CA:  ADDWF  78,F
00CB:  BTFSC  03.0
00CC:  BSF    2F.7
00CD:  RLF    2F,F
00CE:  RRF    78,F
00CF:  RRF    79,F
00D0:  RRF    7A,F
00D1:  RRF    32,F
00D2:  RRF    31,F
00D3:  RRF    30,F
00D4:  BCF    03.0
00D5:  DECFSZ 2E,F
00D6:  GOTO   0B2
00D7:  MOVLW  01
00D8:  ADDWF  77,F
00D9:  BTFSC  03.0
00DA:  GOTO   0FF
00DB:  BTFSC  78.7
00DC:  GOTO   0E4
00DD:  RLF    32,F
00DE:  RLF    7A,F
00DF:  RLF    79,F
00E0:  RLF    78,F
00E1:  DECF   77,F
00E2:  BTFSC  03.2
00E3:  GOTO   0FF
00E4:  BTFSS  32.7
00E5:  GOTO   0F5
00E6:  INCF   7A,F
00E7:  BTFSS  03.2
00E8:  GOTO   0F5
00E9:  INCF   79,F
00EA:  BTFSS  03.2
00EB:  GOTO   0F5
00EC:  INCF   78,F
00ED:  BTFSS  03.2
00EE:  GOTO   0F5
00EF:  RRF    78,F
00F0:  RRF    79,F
00F1:  RRF    7A,F
00F2:  INCF   77,F
00F3:  BTFSC  03.2
00F4:  GOTO   0FF
00F5:  MOVF   27,W
00F6:  MOVWF  2F
00F7:  MOVF   2B,W
00F8:  XORWF  2F,F
00F9:  BTFSS  2F.7
00FA:  GOTO   0FD
00FB:  BSF    78.7
00FC:  GOTO   103
00FD:  BCF    78.7
00FE:  GOTO   103
00FF:  CLRF   77
0100:  CLRF   78
0101:  CLRF   79
0102:  CLRF   7A
0103:  BCF    0A.3
0104:  BCF    0A.4
0105:  GOTO   27B (RETURN)
0106:  MOVF   26,W
0107:  BTFSC  03.2
0108:  GOTO   1CB
0109:  MOVWF  32
010A:  MOVF   2A,W
010B:  BTFSC  03.2
010C:  GOTO   1CB
010D:  SUBWF  32,F
010E:  BTFSS  03.0
010F:  GOTO   115
0110:  MOVLW  7F
0111:  ADDWF  32,F
0112:  BTFSC  03.0
0113:  GOTO   1CB
0114:  GOTO   11B
0115:  MOVLW  81
0116:  SUBWF  32,F
0117:  BTFSS  03.0
0118:  GOTO   1CB
0119:  BTFSC  03.2
011A:  GOTO   1CB
011B:  MOVF   32,W
011C:  MOVWF  77
011D:  CLRF   78
011E:  CLRF   79
011F:  CLRF   7A
0120:  CLRF   31
0121:  MOVF   27,W
0122:  MOVWF  30
0123:  BSF    30.7
0124:  MOVF   28,W
0125:  MOVWF  2F
0126:  MOVF   29,W
0127:  MOVWF  2E
0128:  MOVLW  19
0129:  MOVWF  32
012A:  MOVF   2D,W
012B:  SUBWF  2E,F
012C:  BTFSC  03.0
012D:  GOTO   13E
012E:  MOVLW  01
012F:  SUBWF  2F,F
0130:  BTFSC  03.0
0131:  GOTO   13E
0132:  SUBWF  30,F
0133:  BTFSC  03.0
0134:  GOTO   13E
0135:  SUBWF  31,F
0136:  BTFSC  03.0
0137:  GOTO   13E
0138:  INCF   31,F
0139:  INCF   30,F
013A:  INCF   2F,F
013B:  MOVF   2D,W
013C:  ADDWF  2E,F
013D:  GOTO   170
013E:  MOVF   2C,W
013F:  SUBWF  2F,F
0140:  BTFSC  03.0
0141:  GOTO   159
0142:  MOVLW  01
0143:  SUBWF  30,F
0144:  BTFSC  03.0
0145:  GOTO   159
0146:  SUBWF  31,F
0147:  BTFSC  03.0
0148:  GOTO   159
0149:  INCF   31,F
014A:  INCF   30,F
014B:  MOVF   2C,W
014C:  ADDWF  2F,F
014D:  MOVF   2D,W
014E:  ADDWF  2E,F
014F:  BTFSS  03.0
0150:  GOTO   170
0151:  INCF   2F,F
0152:  BTFSS  03.2
0153:  GOTO   170
0154:  INCF   30,F
0155:  BTFSS  03.2
0156:  GOTO   170
0157:  INCF   31,F
0158:  GOTO   170
0159:  MOVF   2B,W
015A:  IORLW  80
015B:  SUBWF  30,F
015C:  BTFSC  03.0
015D:  GOTO   16F
015E:  MOVLW  01
015F:  SUBWF  31,F
0160:  BTFSC  03.0
0161:  GOTO   16F
0162:  INCF   31,F
0163:  MOVF   2B,W
0164:  IORLW  80
0165:  ADDWF  30,F
0166:  MOVF   2C,W
0167:  ADDWF  2F,F
0168:  BTFSS  03.0
0169:  GOTO   14D
016A:  INCF   30,F
016B:  BTFSS  03.2
016C:  GOTO   14D
016D:  INCF   31,F
016E:  GOTO   14D
016F:  BSF    7A.0
0170:  DECFSZ 32,F
0171:  GOTO   173
0172:  GOTO   17E
0173:  BCF    03.0
0174:  RLF    2E,F
0175:  RLF    2F,F
0176:  RLF    30,F
0177:  RLF    31,F
0178:  BCF    03.0
0179:  RLF    7A,F
017A:  RLF    79,F
017B:  RLF    78,F
017C:  RLF    33,F
017D:  GOTO   12A
017E:  BTFSS  33.0
017F:  GOTO   186
0180:  BCF    03.0
0181:  RRF    78,F
0182:  RRF    79,F
0183:  RRF    7A,F
0184:  RRF    33,F
0185:  GOTO   189
0186:  DECF   77,F
0187:  BTFSC  03.2
0188:  GOTO   1CB
0189:  BTFSC  33.7
018A:  GOTO   1B2
018B:  BCF    03.0
018C:  RLF    2E,F
018D:  RLF    2F,F
018E:  RLF    30,F
018F:  RLF    31,F
0190:  MOVF   2D,W
0191:  SUBWF  2E,F
0192:  BTFSC  03.0
0193:  GOTO   19E
0194:  MOVLW  01
0195:  SUBWF  2F,F
0196:  BTFSC  03.0
0197:  GOTO   19E
0198:  SUBWF  30,F
0199:  BTFSC  03.0
019A:  GOTO   19E
019B:  SUBWF  31,F
019C:  BTFSS  03.0
019D:  GOTO   1C1
019E:  MOVF   2C,W
019F:  SUBWF  2F,F
01A0:  BTFSC  03.0
01A1:  GOTO   1A9
01A2:  MOVLW  01
01A3:  SUBWF  30,F
01A4:  BTFSC  03.0
01A5:  GOTO   1A9
01A6:  SUBWF  31,F
01A7:  BTFSS  03.0
01A8:  GOTO   1C1
01A9:  MOVF   2B,W
01AA:  IORLW  80
01AB:  SUBWF  30,F
01AC:  BTFSC  03.0
01AD:  GOTO   1B2
01AE:  MOVLW  01
01AF:  SUBWF  31,F
01B0:  BTFSS  03.0
01B1:  GOTO   1C1
01B2:  INCF   7A,F
01B3:  BTFSS  03.2
01B4:  GOTO   1C1
01B5:  INCF   79,F
01B6:  BTFSS  03.2
01B7:  GOTO   1C1
01B8:  INCF   78,F
01B9:  BTFSS  03.2
01BA:  GOTO   1C1
01BB:  INCF   77,F
01BC:  BTFSC  03.2
01BD:  GOTO   1CB
01BE:  RRF    78,F
01BF:  RRF    79,F
01C0:  RRF    7A,F
01C1:  MOVF   27,W
01C2:  MOVWF  32
01C3:  MOVF   2B,W
01C4:  XORWF  32,F
01C5:  BTFSS  32.7
01C6:  GOTO   1C9
01C7:  BSF    78.7
01C8:  GOTO   1CF
01C9:  BCF    78.7
01CA:  GOTO   1CF
01CB:  CLRF   77
01CC:  CLRF   78
01CD:  CLRF   79
01CE:  CLRF   7A
01CF:  BCF    0A.3
01D0:  BCF    0A.4
01D1:  GOTO   292 (RETURN)
01D2:  MOVF   27,W
01D3:  MOVWF  2E
01D4:  MOVF   2B,W
01D5:  XORWF  2E,F
01D6:  BTFSS  2E.7
01D7:  GOTO   1DD
01D8:  BCF    03.2
01D9:  BCF    03.0
01DA:  BTFSC  27.7
01DB:  BSF    03.0
01DC:  GOTO   210
01DD:  MOVF   27,W
01DE:  MOVWF  2E
01DF:  MOVF   2A,W
01E0:  MOVWF  2F
01E1:  MOVF   26,W
01E2:  SUBWF  2F,F
01E3:  BTFSC  03.2
01E4:  GOTO   1EB
01E5:  BTFSS  2E.7
01E6:  GOTO   210
01E7:  MOVF   03,W
01E8:  XORLW  01
01E9:  MOVWF  03
01EA:  GOTO   210
01EB:  MOVF   2B,W
01EC:  MOVWF  2F
01ED:  MOVF   27,W
01EE:  SUBWF  2F,F
01EF:  BTFSC  03.2
01F0:  GOTO   1F7
01F1:  BTFSS  2E.7
01F2:  GOTO   210
01F3:  MOVF   03,W
01F4:  XORLW  01
01F5:  MOVWF  03
01F6:  GOTO   210
01F7:  MOVF   2C,W
01F8:  MOVWF  2F
01F9:  MOVF   28,W
01FA:  SUBWF  2F,F
01FB:  BTFSC  03.2
01FC:  GOTO   203
01FD:  BTFSS  2E.7
01FE:  GOTO   210
01FF:  MOVF   03,W
0200:  XORLW  01
0201:  MOVWF  03
0202:  GOTO   210
0203:  MOVF   2D,W
0204:  MOVWF  2F
0205:  MOVF   29,W
0206:  SUBWF  2F,F
0207:  BTFSC  03.2
0208:  GOTO   20F
0209:  BTFSS  2E.7
020A:  GOTO   210
020B:  MOVF   03,W
020C:  XORLW  01
020D:  MOVWF  03
020E:  GOTO   210
020F:  BCF    03.0
0210:  BCF    0A.3
0211:  BCF    0A.4
0212:  GOTO   2A9 (RETURN)
....................  
.................... #list 
....................  
.................... #device ADC=10 
.................... #use delay(crystal=20000000) 
*
0238:  MOVLW  27
0239:  MOVWF  04
023A:  BCF    03.7
023B:  MOVF   00,W
023C:  BTFSC  03.2
023D:  GOTO   24B
023E:  MOVLW  06
023F:  MOVWF  78
0240:  CLRF   77
0241:  DECFSZ 77,F
0242:  GOTO   241
0243:  DECFSZ 78,F
0244:  GOTO   240
0245:  MOVLW  7B
0246:  MOVWF  77
0247:  DECFSZ 77,F
0248:  GOTO   247
0249:  DECFSZ 00,F
024A:  GOTO   23E
....................  
....................  
....................  
.................... #DEFINE  BT1     PIN_A4 
.................... #define trigger  pin_e2 
.................... #define echo     pin_e1 
....................  
.................... float kcs; 
.................... int i; 
....................  
.................... void tao_xung_trigger() 
.................... { 
....................     
....................    output_high(trigger); 
*
003F:  BSF    03.5
0040:  BCF    09.2
0041:  BCF    03.5
0042:  BSF    09.2
....................    delay_us(10); 
0043:  MOVLW  10
0044:  MOVWF  77
0045:  DECFSZ 77,F
0046:  GOTO   045
0047:  NOP
....................    output_low(trigger); 
0048:  BSF    03.5
0049:  BCF    09.2
004A:  BCF    03.5
004B:  BCF    09.2
....................    set_timer1(0); 
004C:  CLRF   0E
004D:  CLRF   0F
004E:  CLRF   0E
....................    while(!(input(echo))); 
004F:  BSF    03.5
0050:  BSF    09.1
0051:  BCF    03.5
0052:  BTFSS  09.1
0053:  GOTO   04F
....................    setup_timer_1(t1_internal|t1_div_by_4); 
0054:  MOVLW  25
0055:  MOVWF  10
....................    while(input(echo)); 
0056:  BSF    03.5
0057:  BSF    09.1
0058:  BCF    03.5
0059:  BTFSC  09.1
005A:  GOTO   056
....................    kcs = get_timer1(); 
005B:  MOVF   0F,W
005C:  MOVWF  7A
005D:  MOVF   0E,W
005E:  MOVWF  77
005F:  MOVF   0F,W
0060:  SUBWF  7A,W
0061:  BTFSS  03.2
0062:  GOTO   05B
0063:  MOVF   77,W
0064:  MOVWF  26
0065:  MOVF   7A,W
0066:  MOVWF  27
*
0083:  MOVF   7A,W
0084:  MOVWF  23
0085:  MOVF   79,W
0086:  MOVWF  22
0087:  MOVF   78,W
0088:  MOVWF  21
0089:  MOVF   77,W
008A:  MOVWF  20
....................    setup_timer_1(t1_disabled);      
008B:  CLRF   10
008C:  BCF    0A.3
008D:  BCF    0A.4
008E:  GOTO   26A (RETURN)
.................... } 
.................... void set_up_port_ic_chot() 
.................... { 
....................    SET_TRIS_D(0x00); 
*
0004:  MOVLW  00
0005:  BSF    03.5
0006:  MOVWF  08
....................    SET_TRIS_E(0x02); 
0007:  BCF    09.0
0008:  BSF    09.1
0009:  BCF    09.2
000A:  BCF    09.3
....................    //SET_TRIS_A(0x10); 
....................    set_tris_c(0x00); 
000B:  MOVWF  07
000C:  BCF    03.5
000D:  MOVWF  25
....................    //OUTPUT_D(0xff); 
....................    output_c(0x00); 
000E:  MOVWF  25
000F:  BSF    03.5
0010:  CLRF   07
0011:  BCF    03.5
0012:  CLRF   07
....................    output_d(0x00); 
0013:  BSF    03.5
0014:  CLRF   08
0015:  BCF    03.5
0016:  CLRF   08
0017:  BCF    0A.3
0018:  BCF    0A.4
0019:  GOTO   267 (RETURN)
.................... } 
.................... void Go_Straight() 
.................... { 
....................  //set_tris_c(0x00); 
....................  //set_tris_d(0x00); 
....................  //output_c(0x00); 
....................  //output_d(0x00); 
....................     setup_ccp1(ccp_pwm); 
001A:  BCF    25.2
001B:  MOVF   25,W
001C:  BSF    03.5
001D:  MOVWF  07
001E:  BCF    03.5
001F:  BCF    07.2
0020:  MOVLW  0C
0021:  MOVWF  17
0022:  BSF    03.5
0023:  CLRF   1B
0024:  CLRF   1C
0025:  MOVLW  01
0026:  MOVWF  1D
....................     setup_ccp2(ccp_pwm); 
0027:  BCF    03.5
0028:  BCF    25.1
0029:  MOVF   25,W
002A:  BSF    03.5
002B:  MOVWF  07
002C:  BCF    03.5
002D:  BCF    07.1
002E:  MOVLW  0C
002F:  MOVWF  1D
....................     setup_timer_2(t2_div_by_16,255,1); 
0030:  MOVLW  00
0031:  MOVWF  78
0032:  IORLW  06
0033:  MOVWF  12
0034:  MOVLW  FF
0035:  BSF    03.5
0036:  MOVWF  12
....................     set_pwm1_duty(0); 
0037:  BCF    03.5
0038:  CLRF   15
....................     set_pwm2_duty(0); 
0039:  CLRF   1B
....................     set_pwm1_duty(123); 
003A:  MOVLW  7B
003B:  MOVWF  15
....................     set_pwm2_duty(254); 
003C:  MOVLW  FE
003D:  MOVWF  1B
003E:  RETURN
.................... } 
.................... void Turn_Left() 
.................... { 
....................    setup_ccp1(ccp_pwm); 
*
0213:  BCF    25.2
0214:  MOVF   25,W
0215:  BSF    03.5
0216:  MOVWF  07
0217:  BCF    03.5
0218:  BCF    07.2
0219:  MOVLW  0C
021A:  MOVWF  17
021B:  BSF    03.5
021C:  CLRF   1B
021D:  CLRF   1C
021E:  MOVLW  01
021F:  MOVWF  1D
....................    setup_ccp2(ccp_pwm); 
0220:  BCF    03.5
0221:  BCF    25.1
0222:  MOVF   25,W
0223:  BSF    03.5
0224:  MOVWF  07
0225:  BCF    03.5
0226:  BCF    07.1
0227:  MOVLW  0C
0228:  MOVWF  1D
....................    setup_timer_2(t2_div_by_16,255,1); 
0229:  MOVLW  00
022A:  MOVWF  78
022B:  IORLW  06
022C:  MOVWF  12
022D:  MOVLW  FF
022E:  BSF    03.5
022F:  MOVWF  12
....................    set_pwm1_duty(0); 
0230:  BCF    03.5
0231:  CLRF   15
....................    set_pwm2_duty(60); 
0232:  MOVLW  3C
0233:  MOVWF  1B
....................    delay_ms(1000); 
0234:  MOVLW  04
0235:  MOVWF  26
0236:  MOVLW  FA
0237:  MOVWF  27
*
024B:  DECFSZ 26,F
024C:  GOTO   236
024D:  BCF    0A.3
024E:  BCF    0A.4
024F:  GOTO   2AE (RETURN)
.................... } 
.................... void main() 
0250:  MOVF   03,W
0251:  ANDLW  1F
0252:  MOVWF  03
0253:  MOVLW  FF
0254:  MOVWF  25
0255:  BSF    03.5
0256:  BSF    03.6
0257:  MOVF   09,W
0258:  ANDLW  C0
0259:  MOVWF  09
025A:  BCF    03.6
025B:  BCF    1F.4
025C:  BCF    1F.5
025D:  MOVLW  00
025E:  BSF    03.6
025F:  MOVWF  08
0260:  BCF    03.5
0261:  CLRF   07
0262:  CLRF   08
0263:  CLRF   09
0264:  BCF    03.7
.................... { 
....................    set_up_port_ic_chot(); 
0265:  BCF    03.6
0266:  GOTO   004
....................    setup_timer_1(t1_disabled); 
0267:  CLRF   10
....................    Go_Straight(); 
0268:  CALL   01A
....................    while(TRUE) 
....................    {   
....................       tao_xung_trigger(); 
0269:  GOTO   03F
....................       kcs=kcs*0.8; 
026A:  MOVF   23,W
026B:  MOVWF  29
026C:  MOVF   22,W
026D:  MOVWF  28
026E:  MOVF   21,W
026F:  MOVWF  27
0270:  MOVF   20,W
0271:  MOVWF  26
0272:  MOVLW  CD
0273:  MOVWF  2D
0274:  MOVLW  CC
0275:  MOVWF  2C
0276:  MOVLW  4C
0277:  MOVWF  2B
0278:  MOVLW  7E
0279:  MOVWF  2A
027A:  GOTO   08F
027B:  MOVF   7A,W
027C:  MOVWF  23
027D:  MOVF   79,W
027E:  MOVWF  22
027F:  MOVF   78,W
0280:  MOVWF  21
0281:  MOVF   77,W
0282:  MOVWF  20
....................       kcs = (kcs/59); 
0283:  MOVF   23,W
0284:  MOVWF  29
0285:  MOVF   22,W
0286:  MOVWF  28
0287:  MOVF   21,W
0288:  MOVWF  27
0289:  MOVF   20,W
028A:  MOVWF  26
028B:  CLRF   2D
028C:  CLRF   2C
028D:  MOVLW  6C
028E:  MOVWF  2B
028F:  MOVLW  84
0290:  MOVWF  2A
0291:  GOTO   106
0292:  MOVF   7A,W
0293:  MOVWF  23
0294:  MOVF   79,W
0295:  MOVWF  22
0296:  MOVF   78,W
0297:  MOVWF  21
0298:  MOVF   77,W
0299:  MOVWF  20
....................       if(kcs <= 40) 
029A:  MOVF   23,W
029B:  MOVWF  29
029C:  MOVF   22,W
029D:  MOVWF  28
029E:  MOVF   21,W
029F:  MOVWF  27
02A0:  MOVF   20,W
02A1:  MOVWF  26
02A2:  CLRF   2D
02A3:  CLRF   2C
02A4:  MOVLW  20
02A5:  MOVWF  2B
02A6:  MOVLW  84
02A7:  MOVWF  2A
02A8:  GOTO   1D2
02A9:  BTFSC  03.0
02AA:  GOTO   2AD
02AB:  BTFSS  03.2
02AC:  GOTO   2AF
....................       { 
....................          Turn_Left(); 
02AD:  GOTO   213
....................      
....................       } 
02AE:  GOTO   2B0
....................       else  
....................       { 
....................          Go_Straight(); 
02AF:  CALL   01A
....................       } 
02B0:  GOTO   269
....................       //TODO: User Code 
....................    } 
....................  
.................... } 
....................  
02B1:  SLEEP

Configuration Fuses:
   Word  1: 2FE2   HS NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
